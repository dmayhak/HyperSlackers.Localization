// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Host.TemplateFile = C:\Dev\HyperSlackers\HyperSlackers.Localization\Demo.Resources\T4resx.tt

// Make sure the compiler doesn't complain about missing XML comments
#pragma warning disable 1591

namespace Localized
{
	using SmartFormat;
	using System;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Diagnostics;
	using System.Linq;
	using System.Reflection;
	using System.Runtime.CompilerServices;
	using System.Text;
	using System.Threading;
	using System.Threading.Tasks;
	using System.Web;
	using System.Web.Mvc;

	[DebuggerNonUserCodeAttribute()]
	[CompilerGeneratedAttribute()]
	public static class Validation
	{
		#region Resource Manager
		
		private static global::System.Resources.ResourceManager resourceMan;
	
		/// <summary> Returns the cached ResourceManager instance used by this class. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager 
		{
			get
			{
				if (object.ReferenceEquals(Validation.resourceMan, null))
				{
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Localized.Validation", typeof(Validation).Assembly);
					// ???? global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("", typeof().Assembly);
					resourceMan = temp;
				}
			
				return resourceMan;
			}
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static string GetResourceString(string key)
		{
			var culture = Thread.CurrentThread.CurrentCulture;
			var str = ResourceManager.GetString(key, culture);
			
			return str;
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static HtmlString GetResourceHtmlString(string key)
		{
			var str = GetResourceString(key);
			
			return new HtmlString(str);
		}
		
		#endregion Resource Manager
		
		#region Keys
		
		/// <summary> {0} does not match {1}. </summary>
		public static string Error_Compare { get { return GetResourceString("Error_Compare"); } }
		/// <summary> {0} is not a valid credit card number. </summary>
		public static string Error_CreditCard { get { return GetResourceString("Error_CreditCard"); } }
		/// <summary> {0} is not a valid email address. </summary>
		public static string Error_EmailAddress { get { return GetResourceString("Error_EmailAddress"); } }
		/// <summary> {0} is not a valid file. </summary>
		public static string Error_FileExtensions { get { return GetResourceString("Error_FileExtensions"); } }
		/// <summary> {0} can be at most {1} characters long. </summary>
		public static string Error_MaxLength { get { return GetResourceString("Error_MaxLength"); } }
		/// <summary> {0} can be at most {1}. </summary>
		public static string Error_MaxValue { get { return GetResourceString("Error_MaxValue"); } }
		/// <summary> {0} does not meet the password requirements. </summary>
		public static string Error_MembershipPassword { get { return GetResourceString("Error_MembershipPassword"); } }
		/// <summary> {0} must be at least {1} characters long. </summary>
		public static string Error_MinLength { get { return GetResourceString("Error_MinLength"); } }
		/// <summary> {0} must be at least {1}. </summary>
		public static string Error_MinValue { get { return GetResourceString("Error_MinValue"); } }
		/// <summary> {0} is not a valid phone number. </summary>
		public static string Error_Phone { get { return GetResourceString("Error_Phone"); } }
		/// <summary> {0} must be between {1} and {2}. </summary>
		public static string Error_Range { get { return GetResourceString("Error_Range"); } }
		/// <summary> {0} failed validation. </summary>
		public static string Error_RegularExpression { get { return GetResourceString("Error_RegularExpression"); } }
		/// <summary> {0} is required. </summary>
		public static string Error_Required { get { return GetResourceString("Error_Required"); } }
		/// <summary> {0} must be between {1} and {2} characters long. </summary>
		public static string Error_StringLength { get { return GetResourceString("Error_StringLength"); } }
		/// <summary> {0} can be at most {2} characters long. </summary>
		public static string Error_StringLengthMax { get { return GetResourceString("Error_StringLengthMax"); } }
		/// <summary> {0} is not a valid URL. </summary>
		public static string Error_Url { get { return GetResourceString("Error_Url"); } }
		
		#endregion Keys
		
		#region Key Names
		
		public static class KeyNames
		{
			public const string Error_Compare = "Error_Compare";
			public const string Error_CreditCard = "Error_CreditCard";
			public const string Error_EmailAddress = "Error_EmailAddress";
			public const string Error_FileExtensions = "Error_FileExtensions";
			public const string Error_MaxLength = "Error_MaxLength";
			public const string Error_MaxValue = "Error_MaxValue";
			public const string Error_MembershipPassword = "Error_MembershipPassword";
			public const string Error_MinLength = "Error_MinLength";
			public const string Error_MinValue = "Error_MinValue";
			public const string Error_Phone = "Error_Phone";
			public const string Error_Range = "Error_Range";
			public const string Error_RegularExpression = "Error_RegularExpression";
			public const string Error_Required = "Error_Required";
			public const string Error_StringLength = "Error_StringLength";
			public const string Error_StringLengthMax = "Error_StringLengthMax";
			public const string Error_Url = "Error_Url";
		}
		
		#endregion Key Names
	}
	

}

